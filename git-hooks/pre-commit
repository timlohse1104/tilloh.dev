#!/bin/sh

echo "Running linting hook"

# Redirect output to stderr.
exec 1>&2

# Run the linter on the frontend code
cd frontend
nx run-many -t lint --all

# If there is an error, abort the commit
if [ $? -ne 0 ]; then
 echo "\nFrontend linting failed, commit aborted."
 exit 1
fi

# Run the linter on the frontend code
cd ../backend
nx run-many -t lint --all

# If there is an error, abort the commit
if [ $? -ne 0 ]; then
 echo "\nBackend linting failed, commit aborted."
 exit 1
fi

# -----------------------------------------------------

echo "Running pre commit message hook."

# Get most recent commit
LATEST_COMMIT=$(git rev-parse --short HEAD)

# Get the commit message of the latest commit
COMMIT_MSG=$(git log -1 --pretty=%B)

# checks for keywords and adds appropriate gitmoji
if [[ $COMMIT_MSG == *"fix"* ]]; then
    GITMOJI=":bug:"
elif [[ $COMMIT_MSG == *"add"* ]]; then
    GITMOJI=":sparkles:"
elif [[ $COMMIT_MSG == *"remove"* ]]; then
    GITMOJI=":fire:"
else
    GITMOJI=":rocket:"
fi

# Amend the latest commit with the new message
git commit --amend -m "$GITMOJI $COMMIT_MSG" > /dev/null

echo "Edited commit message."