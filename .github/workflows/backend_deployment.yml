name: Backend Deployment to uberspace
on:
  push:
    branches:
      - "main"
    paths:
      - "backend/**"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Testing Backend
        run: echo "Testing not implemented yet..."

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Building Backend
        run: echo "Building nestjs application..."

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js 20.11.1 LTS version
        uses: actions/setup-node@v2
        with:
          node-version: 20.11.1

      - name: Cache node_modules
        id: node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules

      - name: Npm clean install
        run: |
          cd backend
          npm ci

      - name: Build backend
        run: |
          cd backend
          npm run build

      - name: Zip backend artifact
        run: |
          cd backend
          zip -r dist.zip dist/apps/backend

      - name: Upload zipped backend artifact
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: backend/dist.zip

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploying Backend
        run: echo "Deploying backend artifact..."

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: backend

      - name: Unzip backend to target directory
        run: |
          mkdir -p backend_target
          unzip backend/dist.zip -d backend_temp
          mv backend_temp/dist/* backend_target/
          rm -rf backend_temp

      - name: Recursivly upload built backend files to uberspace
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.SSHHOST }}
          username: ${{ secrets.SSHUSER }}
          password: ${{ secrets.SSHPASS }}
          port: ${{ vars.SSHPORT }}
          source: "backend_target/*"
          target: /var/www/virtual/${{ secrets.SSHUSER }}/api
          overwrite: true

      - name: SSH into the remote server and move files
        uses: appleboy/ssh-action@master
        with:
          host: ${{ vars.SSHHOST }}
          username: ${{ secrets.SSHUSER }}
          password: ${{ secrets.SSHPASS }}
          port: ${{ vars.SSHPORT }}
          script: |
            cp -rf api/backend_target/. api/
            rm -rf api/backend_target
